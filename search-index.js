var searchIndex = JSON.parse('{\
"lz_str":{"doc":"A port of lz-string to Rust.","t":[5,5,5,5,5,5,5,5,5,5,5,5,8,16,10],"n":["compress","compress_internal","compress_to_base64","compress_to_encoded_uri_component","compress_to_uint8_array","compress_to_utf16","decompress","decompress_from_base64","decompress_from_encoded_uri_component","decompress_from_uint8_array","decompress_from_utf16","decompress_internal","IntoWideIter","Iter","into_wide_iter"],"q":["lz_str","","","","","","","","","","","","","",""],"d":["Compress a string into a [<code>Vec<u16></code>].","The internal function for compressing data.","Compress a string into a [<code>String</code>], which is valid base64.","Compress a string into a [<code>String</code>], which can be safely …","Compress a string into a [<code>Vec<u8></code>].","Compress a string as a valid [<code>String</code>].","Decompress a string into a [<code>Vec<u16></code>]. The result …","Decompress a [<code>&str</code>] compressed with […","Decompress a [<code>&str</code>] compressed with […","Decompress a byte slice compressed with […","Decompress a [<code>&str</code>] compressed with […","The internal decompress function.","A trait to make it easier to pass arguments to functions.","The Iterator type","Convert this object into something that yields possibly …"],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,1,1],"f":[[[],[["vec",3],["u16",15]]],[[["usize",15],["fn",8],["iterator",8]],[["vec",3],["u16",15]]],[[],["string",3]],[[],["string",3]],[[],[["vec",3],["u8",15]]],[[],["string",3]],[[],[["option",4],["vec",3]]],[[["str",15]],[["option",4],["vec",3]]],[[["str",15]],[["option",4],["vec",3]]],[[],[["option",4],["vec",3]]],[[["str",15]],[["option",4],["vec",3]]],[[["usize",15]],[["option",4],["vec",3]]],null,null,[[]]],"p":[[8,"IntoWideIter"]]}\
}');
initSearch(searchIndex);